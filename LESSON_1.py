# УРОК№1:
#  ПЕРЕМЕННЫЕ (их инициализация)

#для проверки типа переменной:
type(переменная)
# у каждой переменной есть собственный хеш-памяти id:
a = 1
id(a)

# Объявляем переменную и присваиваем ей значение
name = "Evgeny"
print(name)

# Присваиваем несколько значений нескольким переменным
a, b, c = 5, 3.2, "Привет"
print (a)
print (b)
print (c)

# константы
pi = 3.14159
meter = 2 * pi * 5.5    #meter относится к окружности круга
print(«Окружность круга:», meter)  # Возьмите окружность круга для вывода

# Переменное имя используется для обозначения имени, введенного с клавиатуры (может быть китайское имя)
name = input("Введите ваше имя:")  #input Значение, введенное функцией с клавиатуры (здесь имя)
            # "Введите ваше имя:" используется в качестве запроса ввода
print(name, "Привет!")  Функция #print выводит значение name, затем пробел и, наконец, «Hello!»

# константы
pi = 3.14159
meter = 2 * pi * 5.5    #meter относится к окружности круга
print(«Окружность круга:», meter)  # Возьмите окружность круга для вывода

# вызов констант через импортирование
PI = 3.14
GRAVITY = 9.8

import constant
print(constant.PI)
print(constant.GRAVITY)

# ЛИТЕРАЛЫ (ТИПЫ ДАННЫХ ИЛИ ТИПЫ ЗНАЧЕНИЙ)

#numbers: int, float, complex

# string
strings = "Это Python"
char = "C"
multiline_str = """Это многострочная строка."""

# logic
x = (1 == True)
y = (1 == False)
a = True + 4
b = False + 10
print("x:", x)
print("y:", y)
print("a:", a)
print("b:", b)

# collections
fruits = ["яблоко", "манго", "апельсин"] #список
numbers = (1, 2, 3) #кортеж
alphabets = {'а' : 'арбуз', 'б' : 'баран', 'в' : 'ворон'} #словарь
vowels = {'а', 'е', 'и' , 'о', 'у', 'ы', 'э', 'ю', 'я' } #множество

print(fruits)
print(numbers)
print(alphabets)
print(vowels)

# None. Обладает местом в памяти, используется, когда значение не известно в данный момент совершения кода.

""" многострочный (устаревший) тип 
комментариев """
# наиболее респектабельный